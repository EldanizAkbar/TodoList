{"version":3,"sources":["components/TodoForm.js","App.js","index.js"],"names":["TodoForm","props","state","newItem","list","key","value","this","setState","alert","id","Math","random","slice","push","updatedList","filter","item","class","className","type","onChange","e","updateInput","target","placeholder","onClick","addItem","map","deleteItem","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAuGeA,E,kDAlGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,QAAS,GACTC,KAAM,IALK,E,+CASnB,SAAYC,EAAKC,GACbC,KAAKC,SAAL,eACKH,EAAMC,M,qBAIf,WACI,GAAuB,IAApBC,KAAKL,MAAMC,QACVM,MAAM,4BAEN,CAGJ,IAAMN,EAAU,CACZO,GAAI,EAAIC,KAAKC,SACbN,MAAOC,KAAKL,MAAMC,QAAQU,SAGxBT,EAAI,YAAOG,KAAKL,MAAME,MAE5BA,EAAKU,KAAKX,GAEVI,KAAKC,SAAS,CACVJ,OACAD,QAAS,Q,wBAMjB,SAAWO,GACP,IACMK,EADI,YAAOR,KAAKL,MAAME,MACHY,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KACpDH,KAAKC,SAAS,CAAEJ,KAAMW,M,oBAE1B,WAAU,IAAD,OACL,OACI,gCACI,qBAAKG,MAAM,cAAX,SACI,qBAAKA,MAAM,gBAAX,SACI,oBAAIC,UAAU,OAAd,4CAIR,qBAAKD,MAAM,mBAAX,SACI,qBAAKA,MAAM,mCAAX,SAEI,uBAAMC,UAAU,gCAAhB,UACI,uBACID,MAAM,gBACNE,KAAK,OACLd,MAAOC,KAAKL,MAAMC,QAClBkB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOlB,QACpDmB,YAAY,eAEhB,wBAAQL,KAAK,SAASF,MAAM,WAAWQ,QAAS,kBAAM,EAAKC,WAA3D,wBAOZ,qBAAKR,UAAU,mBAAf,SACI,qBAAKA,UAAU,mCAAf,SACI,oBAAID,MAAM,aAAV,SACKX,KAAKL,MAAME,KAAKwB,KAAI,SAAAX,GACjB,OAEI,qBAAIC,MAAM,4BAAV,UACKD,EAAKX,MACN,cAAC,IAAD,CACJa,UAAU,YACVO,QAAS,kBAAM,EAAKG,WAAWZ,EAAKP,SAJOO,EAAKP,oB,GA/E7DoB,IAAMC,WCQdC,MARf,WACE,OACE,qBAAKb,UAAU,+BAAf,SACE,cAAC,EAAD,OCFNc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae552c25.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../css/todoform.css\"\r\nimport { BsFillXCircleFill } from \"react-icons/bs\";\r\nclass TodoForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newItem: \"\",\r\n            list: []\r\n        }\r\n    }\r\n\r\n    updateInput(key, value) {\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    addItem() {\r\n        if(this.state.newItem==\"\"){\r\n            alert(\"Input can't be empty\");\r\n        }\r\n        else{\r\n\r\n       \r\n        const newItem = {\r\n            id: 1 + Math.random(),\r\n            value: this.state.newItem.slice()\r\n\r\n        };\r\n        const list = [...this.state.list]\r\n\r\n        list.push(newItem);\r\n\r\n        this.setState({\r\n            list,\r\n            newItem: \"\"\r\n        })\r\n    }\r\n\r\n    }\r\n\r\n    deleteItem(id) {\r\n        const list = [...this.state.list];\r\n        const updatedList = list.filter(item => item.id !== id);\r\n        this.setState({ list: updatedList });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"row mx-auto\">\r\n                    <div class='col-8 mx-auto'>\r\n                        <h1 className=\"mt-5\">What's the Plan for Today?</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row mx-auto mt-3\">\r\n                    <div class='col-12 col-sm-8 col-lg-5 mx-auto'>\r\n\r\n                        <form className=\"d-flex justify-content-center\">\r\n                            <input\r\n                                class=\"int p-3 w-100\"\r\n                                type=\"text\"\r\n                                value={this.state.newItem}\r\n                                onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n                                placeholder=\"Add a todo\" />\r\n\r\n                            <button type=\"button\" class=\"btn px-3\" onClick={() => this.addItem()}>\r\n                                Add\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row mx-auto mt-3\">\r\n                    <div className=\"col-12 col-sm-8 col-lg-5 mx-auto\">\r\n                        <ul class=\"list-group\">\r\n                            {this.state.list.map(item => {\r\n                                return (\r\n                          \r\n                                    <li class=\"list-group-item mt-3 mb-2\" key={item.id} >\r\n                                        {item.value}\r\n                                        <BsFillXCircleFill\r\n                                    className=\"todo-item\"\r\n                                    onClick={() => this.deleteItem(item.id)}>\r\n                                 </BsFillXCircleFill>\r\n                                    </li>\r\n                                   \r\n\r\n                                )\r\n                            })}\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\nimport TodoForm from './components/TodoForm';\n\nfunction App() {\n  return (\n    <div className='container todo-app pb-5 mb-5'>\n      <TodoForm />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}